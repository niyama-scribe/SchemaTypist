//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Dapper;
using SchemaTypist;
using SchemaTypist.DatabaseMetadata;
using System;
using System.Collections.Generic;
using System.Reflection;
using SchemaTypist.Generated.Domain;

namespace SchemaTypist.Generated.Persistence.Mapping
{
	static partial class PgCatalog
	{
		public static partial class PgAttributeMapper
		{
			static partial class Constants
			{
				public const string Attacl = "attacl";
				public const string Attalign = "attalign";
				public const string Attbyval = "attbyval";
				public const string Attcacheoff = "attcacheoff";
				public const string Attcollation = "attcollation";
				public const string Attcompression = "attcompression";
				public const string Attfdwoption = "attfdwoptions";
				public const string Attgenerated = "attgenerated";
				public const string Atthasdef = "atthasdef";
				public const string Atthasmissing = "atthasmissing";
				public const string Attidentity = "attidentity";
				public const string Attinhcount = "attinhcount";
				public const string Attisdropped = "attisdropped";
				public const string Attislocal = "attislocal";
				public const string Attlen = "attlen";
				public const string Attmissingval = "attmissingval";
				public const string Attname = "attname";
				public const string Attndim = "attndims";
				public const string Attnotnull = "attnotnull";
				public const string Attnum = "attnum";
				public const string Attoption = "attoptions";
				public const string Attrelid = "attrelid";
				public const string Attstattarget = "attstattarget";
				public const string Attstorage = "attstorage";
				public const string Atttypid = "atttypid";
				public const string Atttypmod = "atttypmod";
			}

			public static TableDefinition Table => new TableDefinition();

			public partial class TableDefinition : TabularDefinition
			{
				public TableDefinition() : base("pg_catalog.pg_attribute")
				{
					Attacl = new ColumnDefinition(Constants.Attacl, this);
					Attalign = new ColumnDefinition(Constants.Attalign, this);
					Attbyval = new ColumnDefinition(Constants.Attbyval, this);
					Attcacheoff = new ColumnDefinition(Constants.Attcacheoff, this);
					Attcollation = new ColumnDefinition(Constants.Attcollation, this);
					Attcompression = new ColumnDefinition(Constants.Attcompression, this);
					Attfdwoption = new ColumnDefinition(Constants.Attfdwoption, this);
					Attgenerated = new ColumnDefinition(Constants.Attgenerated, this);
					Atthasdef = new ColumnDefinition(Constants.Atthasdef, this);
					Atthasmissing = new ColumnDefinition(Constants.Atthasmissing, this);
					Attidentity = new ColumnDefinition(Constants.Attidentity, this);
					Attinhcount = new ColumnDefinition(Constants.Attinhcount, this);
					Attisdropped = new ColumnDefinition(Constants.Attisdropped, this);
					Attislocal = new ColumnDefinition(Constants.Attislocal, this);
					Attlen = new ColumnDefinition(Constants.Attlen, this);
					Attmissingval = new ColumnDefinition(Constants.Attmissingval, this);
					Attname = new ColumnDefinition(Constants.Attname, this);
					Attndim = new ColumnDefinition(Constants.Attndim, this);
					Attnotnull = new ColumnDefinition(Constants.Attnotnull, this);
					Attnum = new ColumnDefinition(Constants.Attnum, this);
					Attoption = new ColumnDefinition(Constants.Attoption, this);
					Attrelid = new ColumnDefinition(Constants.Attrelid, this);
					Attstattarget = new ColumnDefinition(Constants.Attstattarget, this);
					Attstorage = new ColumnDefinition(Constants.Attstorage, this);
					Atttypid = new ColumnDefinition(Constants.Atttypid, this);
					Atttypmod = new ColumnDefinition(Constants.Atttypmod, this);
				}

				public TableDefinition As(string alias) => base.As<TableDefinition>(alias);

				public ColumnDefinition Attacl { get; private set; }
				public ColumnDefinition Attalign { get; private set; }
				public ColumnDefinition Attbyval { get; private set; }
				public ColumnDefinition Attcacheoff { get; private set; }
				public ColumnDefinition Attcollation { get; private set; }
				public ColumnDefinition Attcompression { get; private set; }
				public ColumnDefinition Attfdwoption { get; private set; }
				public ColumnDefinition Attgenerated { get; private set; }
				public ColumnDefinition Atthasdef { get; private set; }
				public ColumnDefinition Atthasmissing { get; private set; }
				public ColumnDefinition Attidentity { get; private set; }
				public ColumnDefinition Attinhcount { get; private set; }
				public ColumnDefinition Attisdropped { get; private set; }
				public ColumnDefinition Attislocal { get; private set; }
				public ColumnDefinition Attlen { get; private set; }
				public ColumnDefinition Attmissingval { get; private set; }
				public ColumnDefinition Attname { get; private set; }
				public ColumnDefinition Attndim { get; private set; }
				public ColumnDefinition Attnotnull { get; private set; }
				public ColumnDefinition Attnum { get; private set; }
				public ColumnDefinition Attoption { get; private set; }
				public ColumnDefinition Attrelid { get; private set; }
				public ColumnDefinition Attstattarget { get; private set; }
				public ColumnDefinition Attstorage { get; private set; }
				public ColumnDefinition Atttypid { get; private set; }
				public ColumnDefinition Atttypmod { get; private set; }

			}
		
			public static partial class QueryResults
			{
				private static Dictionary<string, string> columnMap = new Dictionary<string, string>()
				{
					{Constants.Attacl, nameof(PgAttribute.Attacl) },
					{Constants.Attalign, nameof(PgAttribute.Attalign) },
					{Constants.Attbyval, nameof(PgAttribute.Attbyval) },
					{Constants.Attcacheoff, nameof(PgAttribute.Attcacheoff) },
					{Constants.Attcollation, nameof(PgAttribute.Attcollation) },
					{Constants.Attcompression, nameof(PgAttribute.Attcompression) },
					{Constants.Attfdwoption, nameof(PgAttribute.Attfdwoption) },
					{Constants.Attgenerated, nameof(PgAttribute.Attgenerated) },
					{Constants.Atthasdef, nameof(PgAttribute.Atthasdef) },
					{Constants.Atthasmissing, nameof(PgAttribute.Atthasmissing) },
					{Constants.Attidentity, nameof(PgAttribute.Attidentity) },
					{Constants.Attinhcount, nameof(PgAttribute.Attinhcount) },
					{Constants.Attisdropped, nameof(PgAttribute.Attisdropped) },
					{Constants.Attislocal, nameof(PgAttribute.Attislocal) },
					{Constants.Attlen, nameof(PgAttribute.Attlen) },
					{Constants.Attmissingval, nameof(PgAttribute.Attmissingval) },
					{Constants.Attname, nameof(PgAttribute.Attname) },
					{Constants.Attndim, nameof(PgAttribute.Attndim) },
					{Constants.Attnotnull, nameof(PgAttribute.Attnotnull) },
					{Constants.Attnum, nameof(PgAttribute.Attnum) },
					{Constants.Attoption, nameof(PgAttribute.Attoption) },
					{Constants.Attrelid, nameof(PgAttribute.Attrelid) },
					{Constants.Attstattarget, nameof(PgAttribute.Attstattarget) },
					{Constants.Attstorage, nameof(PgAttribute.Attstorage) },
					{Constants.Atttypid, nameof(PgAttribute.Atttypid) },
					{Constants.Atttypmod, nameof(PgAttribute.Atttypmod) },
				};

				static Func<Type, string, PropertyInfo> GetMapperFunc()
				{
					var mapper = new Func<Type, string, PropertyInfo>((t, columnName) =>
					{
						if (columnMap.ContainsKey(columnName)) return t.GetProperty(columnMap[columnName]);
						return t.GetProperty(columnName);
					}
					);
					return mapper;
				}

				public static CustomPropertyTypeMap GetTypeMap()
				{
					var typeMap = new CustomPropertyTypeMap(typeof(PgAttribute), GetMapperFunc());
					CustomizeTypeMap(typeMap);
					return typeMap;
				}

				static partial void CustomizeTypeMap(CustomPropertyTypeMap typeMap);
			}
		}
	}
}