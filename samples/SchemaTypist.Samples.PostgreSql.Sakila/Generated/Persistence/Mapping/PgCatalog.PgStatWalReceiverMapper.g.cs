//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Dapper;
using SchemaTypist;
using SchemaTypist.DatabaseMetadata;
using System;
using System.Collections.Generic;
using System.Reflection;
using SchemaTypist.Generated.Domain;

namespace SchemaTypist.Generated.Persistence.Mapping
{
	static partial class PgCatalog
	{
		public static partial class PgStatWalReceiverMapper
		{
			static partial class Constants
			{
				public const string Conninfo = "conninfo";
				public const string FlushedLsn = "flushed_lsn";
				public const string LastMsgReceiptTime = "last_msg_receipt_time";
				public const string LastMsgSendTime = "last_msg_send_time";
				public const string LatestEndLsn = "latest_end_lsn";
				public const string LatestEndTime = "latest_end_time";
				public const string Pid = "pid";
				public const string ReceiveStartLsn = "receive_start_lsn";
				public const string ReceiveStartTli = "receive_start_tli";
				public const string ReceivedTli = "received_tli";
				public const string SenderHost = "sender_host";
				public const string SenderPort = "sender_port";
				public const string SlotName = "slot_name";
				public const string Status = "status";
				public const string WrittenLsn = "written_lsn";
			}

			public static TableDefinition Table => new TableDefinition();

			public partial class TableDefinition : TabularDefinition
			{
				public TableDefinition() : base("pg_catalog.pg_stat_wal_receiver")
				{
					Conninfo = new ColumnDefinition(Constants.Conninfo, this);
					FlushedLsn = new ColumnDefinition(Constants.FlushedLsn, this);
					LastMsgReceiptTime = new ColumnDefinition(Constants.LastMsgReceiptTime, this);
					LastMsgSendTime = new ColumnDefinition(Constants.LastMsgSendTime, this);
					LatestEndLsn = new ColumnDefinition(Constants.LatestEndLsn, this);
					LatestEndTime = new ColumnDefinition(Constants.LatestEndTime, this);
					Pid = new ColumnDefinition(Constants.Pid, this);
					ReceiveStartLsn = new ColumnDefinition(Constants.ReceiveStartLsn, this);
					ReceiveStartTli = new ColumnDefinition(Constants.ReceiveStartTli, this);
					ReceivedTli = new ColumnDefinition(Constants.ReceivedTli, this);
					SenderHost = new ColumnDefinition(Constants.SenderHost, this);
					SenderPort = new ColumnDefinition(Constants.SenderPort, this);
					SlotName = new ColumnDefinition(Constants.SlotName, this);
					Status = new ColumnDefinition(Constants.Status, this);
					WrittenLsn = new ColumnDefinition(Constants.WrittenLsn, this);
				}

				public TableDefinition As(string alias) => base.As<TableDefinition>(alias);

				public ColumnDefinition Conninfo { get; private set; }
				public ColumnDefinition FlushedLsn { get; private set; }
				public ColumnDefinition LastMsgReceiptTime { get; private set; }
				public ColumnDefinition LastMsgSendTime { get; private set; }
				public ColumnDefinition LatestEndLsn { get; private set; }
				public ColumnDefinition LatestEndTime { get; private set; }
				public ColumnDefinition Pid { get; private set; }
				public ColumnDefinition ReceiveStartLsn { get; private set; }
				public ColumnDefinition ReceiveStartTli { get; private set; }
				public ColumnDefinition ReceivedTli { get; private set; }
				public ColumnDefinition SenderHost { get; private set; }
				public ColumnDefinition SenderPort { get; private set; }
				public ColumnDefinition SlotName { get; private set; }
				public ColumnDefinition Status { get; private set; }
				public ColumnDefinition WrittenLsn { get; private set; }

			}
		
			public static partial class QueryResults
			{
				private static Dictionary<string, string> columnMap = new Dictionary<string, string>()
				{
					{Constants.Conninfo, nameof(PgStatWalReceiver.Conninfo) },
					{Constants.FlushedLsn, nameof(PgStatWalReceiver.FlushedLsn) },
					{Constants.LastMsgReceiptTime, nameof(PgStatWalReceiver.LastMsgReceiptTime) },
					{Constants.LastMsgSendTime, nameof(PgStatWalReceiver.LastMsgSendTime) },
					{Constants.LatestEndLsn, nameof(PgStatWalReceiver.LatestEndLsn) },
					{Constants.LatestEndTime, nameof(PgStatWalReceiver.LatestEndTime) },
					{Constants.Pid, nameof(PgStatWalReceiver.Pid) },
					{Constants.ReceiveStartLsn, nameof(PgStatWalReceiver.ReceiveStartLsn) },
					{Constants.ReceiveStartTli, nameof(PgStatWalReceiver.ReceiveStartTli) },
					{Constants.ReceivedTli, nameof(PgStatWalReceiver.ReceivedTli) },
					{Constants.SenderHost, nameof(PgStatWalReceiver.SenderHost) },
					{Constants.SenderPort, nameof(PgStatWalReceiver.SenderPort) },
					{Constants.SlotName, nameof(PgStatWalReceiver.SlotName) },
					{Constants.Status, nameof(PgStatWalReceiver.Status) },
					{Constants.WrittenLsn, nameof(PgStatWalReceiver.WrittenLsn) },
				};

				static Func<Type, string, PropertyInfo> GetMapperFunc()
				{
					var mapper = new Func<Type, string, PropertyInfo>((t, columnName) =>
					{
						if (columnMap.ContainsKey(columnName)) return t.GetProperty(columnMap[columnName]);
						return t.GetProperty(columnName);
					}
					);
					return mapper;
				}

				public static CustomPropertyTypeMap GetTypeMap()
				{
					var typeMap = new CustomPropertyTypeMap(typeof(PgStatWalReceiver), GetMapperFunc());
					CustomizeTypeMap(typeMap);
					return typeMap;
				}

				static partial void CustomizeTypeMap(CustomPropertyTypeMap typeMap);
			}
		}
	}
}