//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Dapper;
using SchemaTypist;
using SchemaTypist.DatabaseMetadata;
using System;
using System.Collections.Generic;
using System.Reflection;
using SchemaTypist.Generated.Domain;

namespace SchemaTypist.Generated.Persistence.Mapping
{
	static partial class InformationSchema
	{
		public static partial class RoutineMapper
		{
			static partial class Constants
			{
				public const string AsLocator = "as_locator";
				public const string CharacterMaximumLength = "character_maximum_length";
				public const string CharacterOctetLength = "character_octet_length";
				public const string CharacterSetCatalog = "character_set_catalog";
				public const string CharacterSetName = "character_set_name";
				public const string CharacterSetSchema = "character_set_schema";
				public const string CollationCatalog = "collation_catalog";
				public const string CollationName = "collation_name";
				public const string CollationSchema = "collation_schema";
				public const string Created = "created";
				public const string DataType = "data_type";
				public const string DatetimePrecision = "datetime_precision";
				public const string DtdIdentifier = "dtd_identifier";
				public const string ExternalLanguage = "external_language";
				public const string ExternalName = "external_name";
				public const string IntervalPrecision = "interval_precision";
				public const string IntervalType = "interval_type";
				public const string IsDeterministic = "is_deterministic";
				public const string IsImplicitlyInvocable = "is_implicitly_invocable";
				public const string IsNullCall = "is_null_call";
				public const string IsUdtDependent = "is_udt_dependent";
				public const string IsUserDefinedCast = "is_user_defined_cast";
				public const string LastAltered = "last_altered";
				public const string MaxDynamicResultSet = "max_dynamic_result_sets";
				public const string MaximumCardinality = "maximum_cardinality";
				public const string ModuleCatalog = "module_catalog";
				public const string ModuleName = "module_name";
				public const string ModuleSchema = "module_schema";
				public const string NewSavepointLevel = "new_savepoint_level";
				public const string NumericPrecision = "numeric_precision";
				public const string NumericPrecisionRadix = "numeric_precision_radix";
				public const string NumericScale = "numeric_scale";
				public const string ParameterStyle = "parameter_style";
				public const string ResultCastAsLocator = "result_cast_as_locator";
				public const string ResultCastCharMaxLength = "result_cast_char_max_length";
				public const string ResultCastCharOctetLength = "result_cast_char_octet_length";
				public const string ResultCastCharSetCatalog = "result_cast_char_set_catalog";
				public const string ResultCastCharSetName = "result_cast_char_set_name";
				public const string ResultCastCharSetSchema = "result_cast_char_set_schema";
				public const string ResultCastCollationCatalog = "result_cast_collation_catalog";
				public const string ResultCastCollationName = "result_cast_collation_name";
				public const string ResultCastCollationSchema = "result_cast_collation_schema";
				public const string ResultCastDatetimePrecision = "result_cast_datetime_precision";
				public const string ResultCastDtdIdentifier = "result_cast_dtd_identifier";
				public const string ResultCastFromDataType = "result_cast_from_data_type";
				public const string ResultCastIntervalPrecision = "result_cast_interval_precision";
				public const string ResultCastIntervalType = "result_cast_interval_type";
				public const string ResultCastMaximumCardinality = "result_cast_maximum_cardinality";
				public const string ResultCastNumericPrecision = "result_cast_numeric_precision";
				public const string ResultCastNumericPrecisionRadix = "result_cast_numeric_precision_radix";
				public const string ResultCastNumericScale = "result_cast_numeric_scale";
				public const string ResultCastScopeCatalog = "result_cast_scope_catalog";
				public const string ResultCastScopeName = "result_cast_scope_name";
				public const string ResultCastScopeSchema = "result_cast_scope_schema";
				public const string ResultCastTypeUdtCatalog = "result_cast_type_udt_catalog";
				public const string ResultCastTypeUdtName = "result_cast_type_udt_name";
				public const string ResultCastTypeUdtSchema = "result_cast_type_udt_schema";
				public const string RoutineBody = "routine_body";
				public const string RoutineCatalog = "routine_catalog";
				public const string RoutineDefinition = "routine_definition";
				public const string RoutineName = "routine_name";
				public const string RoutineSchema = "routine_schema";
				public const string RoutineType = "routine_type";
				public const string SchemaLevelRoutine = "schema_level_routine";
				public const string ScopeCatalog = "scope_catalog";
				public const string ScopeName = "scope_name";
				public const string ScopeSchema = "scope_schema";
				public const string SecurityType = "security_type";
				public const string SpecificCatalog = "specific_catalog";
				public const string SpecificName = "specific_name";
				public const string SpecificSchema = "specific_schema";
				public const string SqlDataAccess = "sql_data_access";
				public const string SqlPath = "sql_path";
				public const string ToSqlSpecificCatalog = "to_sql_specific_catalog";
				public const string ToSqlSpecificName = "to_sql_specific_name";
				public const string ToSqlSpecificSchema = "to_sql_specific_schema";
				public const string TypeUdtCatalog = "type_udt_catalog";
				public const string TypeUdtName = "type_udt_name";
				public const string TypeUdtSchema = "type_udt_schema";
				public const string UdtCatalog = "udt_catalog";
				public const string UdtName = "udt_name";
				public const string UdtSchema = "udt_schema";
			}

			public static TableDefinition Table => new TableDefinition();

			public partial class TableDefinition : TabularDefinition
			{
				public TableDefinition() : base("information_schema.routines")
				{
					AsLocator = new ColumnDefinition(Constants.AsLocator, this);
					CharacterMaximumLength = new ColumnDefinition(Constants.CharacterMaximumLength, this);
					CharacterOctetLength = new ColumnDefinition(Constants.CharacterOctetLength, this);
					CharacterSetCatalog = new ColumnDefinition(Constants.CharacterSetCatalog, this);
					CharacterSetName = new ColumnDefinition(Constants.CharacterSetName, this);
					CharacterSetSchema = new ColumnDefinition(Constants.CharacterSetSchema, this);
					CollationCatalog = new ColumnDefinition(Constants.CollationCatalog, this);
					CollationName = new ColumnDefinition(Constants.CollationName, this);
					CollationSchema = new ColumnDefinition(Constants.CollationSchema, this);
					Created = new ColumnDefinition(Constants.Created, this);
					DataType = new ColumnDefinition(Constants.DataType, this);
					DatetimePrecision = new ColumnDefinition(Constants.DatetimePrecision, this);
					DtdIdentifier = new ColumnDefinition(Constants.DtdIdentifier, this);
					ExternalLanguage = new ColumnDefinition(Constants.ExternalLanguage, this);
					ExternalName = new ColumnDefinition(Constants.ExternalName, this);
					IntervalPrecision = new ColumnDefinition(Constants.IntervalPrecision, this);
					IntervalType = new ColumnDefinition(Constants.IntervalType, this);
					IsDeterministic = new ColumnDefinition(Constants.IsDeterministic, this);
					IsImplicitlyInvocable = new ColumnDefinition(Constants.IsImplicitlyInvocable, this);
					IsNullCall = new ColumnDefinition(Constants.IsNullCall, this);
					IsUdtDependent = new ColumnDefinition(Constants.IsUdtDependent, this);
					IsUserDefinedCast = new ColumnDefinition(Constants.IsUserDefinedCast, this);
					LastAltered = new ColumnDefinition(Constants.LastAltered, this);
					MaxDynamicResultSet = new ColumnDefinition(Constants.MaxDynamicResultSet, this);
					MaximumCardinality = new ColumnDefinition(Constants.MaximumCardinality, this);
					ModuleCatalog = new ColumnDefinition(Constants.ModuleCatalog, this);
					ModuleName = new ColumnDefinition(Constants.ModuleName, this);
					ModuleSchema = new ColumnDefinition(Constants.ModuleSchema, this);
					NewSavepointLevel = new ColumnDefinition(Constants.NewSavepointLevel, this);
					NumericPrecision = new ColumnDefinition(Constants.NumericPrecision, this);
					NumericPrecisionRadix = new ColumnDefinition(Constants.NumericPrecisionRadix, this);
					NumericScale = new ColumnDefinition(Constants.NumericScale, this);
					ParameterStyle = new ColumnDefinition(Constants.ParameterStyle, this);
					ResultCastAsLocator = new ColumnDefinition(Constants.ResultCastAsLocator, this);
					ResultCastCharMaxLength = new ColumnDefinition(Constants.ResultCastCharMaxLength, this);
					ResultCastCharOctetLength = new ColumnDefinition(Constants.ResultCastCharOctetLength, this);
					ResultCastCharSetCatalog = new ColumnDefinition(Constants.ResultCastCharSetCatalog, this);
					ResultCastCharSetName = new ColumnDefinition(Constants.ResultCastCharSetName, this);
					ResultCastCharSetSchema = new ColumnDefinition(Constants.ResultCastCharSetSchema, this);
					ResultCastCollationCatalog = new ColumnDefinition(Constants.ResultCastCollationCatalog, this);
					ResultCastCollationName = new ColumnDefinition(Constants.ResultCastCollationName, this);
					ResultCastCollationSchema = new ColumnDefinition(Constants.ResultCastCollationSchema, this);
					ResultCastDatetimePrecision = new ColumnDefinition(Constants.ResultCastDatetimePrecision, this);
					ResultCastDtdIdentifier = new ColumnDefinition(Constants.ResultCastDtdIdentifier, this);
					ResultCastFromDataType = new ColumnDefinition(Constants.ResultCastFromDataType, this);
					ResultCastIntervalPrecision = new ColumnDefinition(Constants.ResultCastIntervalPrecision, this);
					ResultCastIntervalType = new ColumnDefinition(Constants.ResultCastIntervalType, this);
					ResultCastMaximumCardinality = new ColumnDefinition(Constants.ResultCastMaximumCardinality, this);
					ResultCastNumericPrecision = new ColumnDefinition(Constants.ResultCastNumericPrecision, this);
					ResultCastNumericPrecisionRadix = new ColumnDefinition(Constants.ResultCastNumericPrecisionRadix, this);
					ResultCastNumericScale = new ColumnDefinition(Constants.ResultCastNumericScale, this);
					ResultCastScopeCatalog = new ColumnDefinition(Constants.ResultCastScopeCatalog, this);
					ResultCastScopeName = new ColumnDefinition(Constants.ResultCastScopeName, this);
					ResultCastScopeSchema = new ColumnDefinition(Constants.ResultCastScopeSchema, this);
					ResultCastTypeUdtCatalog = new ColumnDefinition(Constants.ResultCastTypeUdtCatalog, this);
					ResultCastTypeUdtName = new ColumnDefinition(Constants.ResultCastTypeUdtName, this);
					ResultCastTypeUdtSchema = new ColumnDefinition(Constants.ResultCastTypeUdtSchema, this);
					RoutineBody = new ColumnDefinition(Constants.RoutineBody, this);
					RoutineCatalog = new ColumnDefinition(Constants.RoutineCatalog, this);
					RoutineDefinition = new ColumnDefinition(Constants.RoutineDefinition, this);
					RoutineName = new ColumnDefinition(Constants.RoutineName, this);
					RoutineSchema = new ColumnDefinition(Constants.RoutineSchema, this);
					RoutineType = new ColumnDefinition(Constants.RoutineType, this);
					SchemaLevelRoutine = new ColumnDefinition(Constants.SchemaLevelRoutine, this);
					ScopeCatalog = new ColumnDefinition(Constants.ScopeCatalog, this);
					ScopeName = new ColumnDefinition(Constants.ScopeName, this);
					ScopeSchema = new ColumnDefinition(Constants.ScopeSchema, this);
					SecurityType = new ColumnDefinition(Constants.SecurityType, this);
					SpecificCatalog = new ColumnDefinition(Constants.SpecificCatalog, this);
					SpecificName = new ColumnDefinition(Constants.SpecificName, this);
					SpecificSchema = new ColumnDefinition(Constants.SpecificSchema, this);
					SqlDataAccess = new ColumnDefinition(Constants.SqlDataAccess, this);
					SqlPath = new ColumnDefinition(Constants.SqlPath, this);
					ToSqlSpecificCatalog = new ColumnDefinition(Constants.ToSqlSpecificCatalog, this);
					ToSqlSpecificName = new ColumnDefinition(Constants.ToSqlSpecificName, this);
					ToSqlSpecificSchema = new ColumnDefinition(Constants.ToSqlSpecificSchema, this);
					TypeUdtCatalog = new ColumnDefinition(Constants.TypeUdtCatalog, this);
					TypeUdtName = new ColumnDefinition(Constants.TypeUdtName, this);
					TypeUdtSchema = new ColumnDefinition(Constants.TypeUdtSchema, this);
					UdtCatalog = new ColumnDefinition(Constants.UdtCatalog, this);
					UdtName = new ColumnDefinition(Constants.UdtName, this);
					UdtSchema = new ColumnDefinition(Constants.UdtSchema, this);
				}

				public TableDefinition As(string alias) => base.As<TableDefinition>(alias);

				public ColumnDefinition AsLocator { get; private set; }
				public ColumnDefinition CharacterMaximumLength { get; private set; }
				public ColumnDefinition CharacterOctetLength { get; private set; }
				public ColumnDefinition CharacterSetCatalog { get; private set; }
				public ColumnDefinition CharacterSetName { get; private set; }
				public ColumnDefinition CharacterSetSchema { get; private set; }
				public ColumnDefinition CollationCatalog { get; private set; }
				public ColumnDefinition CollationName { get; private set; }
				public ColumnDefinition CollationSchema { get; private set; }
				public ColumnDefinition Created { get; private set; }
				public ColumnDefinition DataType { get; private set; }
				public ColumnDefinition DatetimePrecision { get; private set; }
				public ColumnDefinition DtdIdentifier { get; private set; }
				public ColumnDefinition ExternalLanguage { get; private set; }
				public ColumnDefinition ExternalName { get; private set; }
				public ColumnDefinition IntervalPrecision { get; private set; }
				public ColumnDefinition IntervalType { get; private set; }
				public ColumnDefinition IsDeterministic { get; private set; }
				public ColumnDefinition IsImplicitlyInvocable { get; private set; }
				public ColumnDefinition IsNullCall { get; private set; }
				public ColumnDefinition IsUdtDependent { get; private set; }
				public ColumnDefinition IsUserDefinedCast { get; private set; }
				public ColumnDefinition LastAltered { get; private set; }
				public ColumnDefinition MaxDynamicResultSet { get; private set; }
				public ColumnDefinition MaximumCardinality { get; private set; }
				public ColumnDefinition ModuleCatalog { get; private set; }
				public ColumnDefinition ModuleName { get; private set; }
				public ColumnDefinition ModuleSchema { get; private set; }
				public ColumnDefinition NewSavepointLevel { get; private set; }
				public ColumnDefinition NumericPrecision { get; private set; }
				public ColumnDefinition NumericPrecisionRadix { get; private set; }
				public ColumnDefinition NumericScale { get; private set; }
				public ColumnDefinition ParameterStyle { get; private set; }
				public ColumnDefinition ResultCastAsLocator { get; private set; }
				public ColumnDefinition ResultCastCharMaxLength { get; private set; }
				public ColumnDefinition ResultCastCharOctetLength { get; private set; }
				public ColumnDefinition ResultCastCharSetCatalog { get; private set; }
				public ColumnDefinition ResultCastCharSetName { get; private set; }
				public ColumnDefinition ResultCastCharSetSchema { get; private set; }
				public ColumnDefinition ResultCastCollationCatalog { get; private set; }
				public ColumnDefinition ResultCastCollationName { get; private set; }
				public ColumnDefinition ResultCastCollationSchema { get; private set; }
				public ColumnDefinition ResultCastDatetimePrecision { get; private set; }
				public ColumnDefinition ResultCastDtdIdentifier { get; private set; }
				public ColumnDefinition ResultCastFromDataType { get; private set; }
				public ColumnDefinition ResultCastIntervalPrecision { get; private set; }
				public ColumnDefinition ResultCastIntervalType { get; private set; }
				public ColumnDefinition ResultCastMaximumCardinality { get; private set; }
				public ColumnDefinition ResultCastNumericPrecision { get; private set; }
				public ColumnDefinition ResultCastNumericPrecisionRadix { get; private set; }
				public ColumnDefinition ResultCastNumericScale { get; private set; }
				public ColumnDefinition ResultCastScopeCatalog { get; private set; }
				public ColumnDefinition ResultCastScopeName { get; private set; }
				public ColumnDefinition ResultCastScopeSchema { get; private set; }
				public ColumnDefinition ResultCastTypeUdtCatalog { get; private set; }
				public ColumnDefinition ResultCastTypeUdtName { get; private set; }
				public ColumnDefinition ResultCastTypeUdtSchema { get; private set; }
				public ColumnDefinition RoutineBody { get; private set; }
				public ColumnDefinition RoutineCatalog { get; private set; }
				public ColumnDefinition RoutineDefinition { get; private set; }
				public ColumnDefinition RoutineName { get; private set; }
				public ColumnDefinition RoutineSchema { get; private set; }
				public ColumnDefinition RoutineType { get; private set; }
				public ColumnDefinition SchemaLevelRoutine { get; private set; }
				public ColumnDefinition ScopeCatalog { get; private set; }
				public ColumnDefinition ScopeName { get; private set; }
				public ColumnDefinition ScopeSchema { get; private set; }
				public ColumnDefinition SecurityType { get; private set; }
				public ColumnDefinition SpecificCatalog { get; private set; }
				public ColumnDefinition SpecificName { get; private set; }
				public ColumnDefinition SpecificSchema { get; private set; }
				public ColumnDefinition SqlDataAccess { get; private set; }
				public ColumnDefinition SqlPath { get; private set; }
				public ColumnDefinition ToSqlSpecificCatalog { get; private set; }
				public ColumnDefinition ToSqlSpecificName { get; private set; }
				public ColumnDefinition ToSqlSpecificSchema { get; private set; }
				public ColumnDefinition TypeUdtCatalog { get; private set; }
				public ColumnDefinition TypeUdtName { get; private set; }
				public ColumnDefinition TypeUdtSchema { get; private set; }
				public ColumnDefinition UdtCatalog { get; private set; }
				public ColumnDefinition UdtName { get; private set; }
				public ColumnDefinition UdtSchema { get; private set; }

			}
		
			public static partial class QueryResults
			{
				private static Dictionary<string, string> columnMap = new Dictionary<string, string>()
				{
					{Constants.AsLocator, nameof(Routine.AsLocator) },
					{Constants.CharacterMaximumLength, nameof(Routine.CharacterMaximumLength) },
					{Constants.CharacterOctetLength, nameof(Routine.CharacterOctetLength) },
					{Constants.CharacterSetCatalog, nameof(Routine.CharacterSetCatalog) },
					{Constants.CharacterSetName, nameof(Routine.CharacterSetName) },
					{Constants.CharacterSetSchema, nameof(Routine.CharacterSetSchema) },
					{Constants.CollationCatalog, nameof(Routine.CollationCatalog) },
					{Constants.CollationName, nameof(Routine.CollationName) },
					{Constants.CollationSchema, nameof(Routine.CollationSchema) },
					{Constants.Created, nameof(Routine.Created) },
					{Constants.DataType, nameof(Routine.DataType) },
					{Constants.DatetimePrecision, nameof(Routine.DatetimePrecision) },
					{Constants.DtdIdentifier, nameof(Routine.DtdIdentifier) },
					{Constants.ExternalLanguage, nameof(Routine.ExternalLanguage) },
					{Constants.ExternalName, nameof(Routine.ExternalName) },
					{Constants.IntervalPrecision, nameof(Routine.IntervalPrecision) },
					{Constants.IntervalType, nameof(Routine.IntervalType) },
					{Constants.IsDeterministic, nameof(Routine.IsDeterministic) },
					{Constants.IsImplicitlyInvocable, nameof(Routine.IsImplicitlyInvocable) },
					{Constants.IsNullCall, nameof(Routine.IsNullCall) },
					{Constants.IsUdtDependent, nameof(Routine.IsUdtDependent) },
					{Constants.IsUserDefinedCast, nameof(Routine.IsUserDefinedCast) },
					{Constants.LastAltered, nameof(Routine.LastAltered) },
					{Constants.MaxDynamicResultSet, nameof(Routine.MaxDynamicResultSet) },
					{Constants.MaximumCardinality, nameof(Routine.MaximumCardinality) },
					{Constants.ModuleCatalog, nameof(Routine.ModuleCatalog) },
					{Constants.ModuleName, nameof(Routine.ModuleName) },
					{Constants.ModuleSchema, nameof(Routine.ModuleSchema) },
					{Constants.NewSavepointLevel, nameof(Routine.NewSavepointLevel) },
					{Constants.NumericPrecision, nameof(Routine.NumericPrecision) },
					{Constants.NumericPrecisionRadix, nameof(Routine.NumericPrecisionRadix) },
					{Constants.NumericScale, nameof(Routine.NumericScale) },
					{Constants.ParameterStyle, nameof(Routine.ParameterStyle) },
					{Constants.ResultCastAsLocator, nameof(Routine.ResultCastAsLocator) },
					{Constants.ResultCastCharMaxLength, nameof(Routine.ResultCastCharMaxLength) },
					{Constants.ResultCastCharOctetLength, nameof(Routine.ResultCastCharOctetLength) },
					{Constants.ResultCastCharSetCatalog, nameof(Routine.ResultCastCharSetCatalog) },
					{Constants.ResultCastCharSetName, nameof(Routine.ResultCastCharSetName) },
					{Constants.ResultCastCharSetSchema, nameof(Routine.ResultCastCharSetSchema) },
					{Constants.ResultCastCollationCatalog, nameof(Routine.ResultCastCollationCatalog) },
					{Constants.ResultCastCollationName, nameof(Routine.ResultCastCollationName) },
					{Constants.ResultCastCollationSchema, nameof(Routine.ResultCastCollationSchema) },
					{Constants.ResultCastDatetimePrecision, nameof(Routine.ResultCastDatetimePrecision) },
					{Constants.ResultCastDtdIdentifier, nameof(Routine.ResultCastDtdIdentifier) },
					{Constants.ResultCastFromDataType, nameof(Routine.ResultCastFromDataType) },
					{Constants.ResultCastIntervalPrecision, nameof(Routine.ResultCastIntervalPrecision) },
					{Constants.ResultCastIntervalType, nameof(Routine.ResultCastIntervalType) },
					{Constants.ResultCastMaximumCardinality, nameof(Routine.ResultCastMaximumCardinality) },
					{Constants.ResultCastNumericPrecision, nameof(Routine.ResultCastNumericPrecision) },
					{Constants.ResultCastNumericPrecisionRadix, nameof(Routine.ResultCastNumericPrecisionRadix) },
					{Constants.ResultCastNumericScale, nameof(Routine.ResultCastNumericScale) },
					{Constants.ResultCastScopeCatalog, nameof(Routine.ResultCastScopeCatalog) },
					{Constants.ResultCastScopeName, nameof(Routine.ResultCastScopeName) },
					{Constants.ResultCastScopeSchema, nameof(Routine.ResultCastScopeSchema) },
					{Constants.ResultCastTypeUdtCatalog, nameof(Routine.ResultCastTypeUdtCatalog) },
					{Constants.ResultCastTypeUdtName, nameof(Routine.ResultCastTypeUdtName) },
					{Constants.ResultCastTypeUdtSchema, nameof(Routine.ResultCastTypeUdtSchema) },
					{Constants.RoutineBody, nameof(Routine.RoutineBody) },
					{Constants.RoutineCatalog, nameof(Routine.RoutineCatalog) },
					{Constants.RoutineDefinition, nameof(Routine.RoutineDefinition) },
					{Constants.RoutineName, nameof(Routine.RoutineName) },
					{Constants.RoutineSchema, nameof(Routine.RoutineSchema) },
					{Constants.RoutineType, nameof(Routine.RoutineType) },
					{Constants.SchemaLevelRoutine, nameof(Routine.SchemaLevelRoutine) },
					{Constants.ScopeCatalog, nameof(Routine.ScopeCatalog) },
					{Constants.ScopeName, nameof(Routine.ScopeName) },
					{Constants.ScopeSchema, nameof(Routine.ScopeSchema) },
					{Constants.SecurityType, nameof(Routine.SecurityType) },
					{Constants.SpecificCatalog, nameof(Routine.SpecificCatalog) },
					{Constants.SpecificName, nameof(Routine.SpecificName) },
					{Constants.SpecificSchema, nameof(Routine.SpecificSchema) },
					{Constants.SqlDataAccess, nameof(Routine.SqlDataAccess) },
					{Constants.SqlPath, nameof(Routine.SqlPath) },
					{Constants.ToSqlSpecificCatalog, nameof(Routine.ToSqlSpecificCatalog) },
					{Constants.ToSqlSpecificName, nameof(Routine.ToSqlSpecificName) },
					{Constants.ToSqlSpecificSchema, nameof(Routine.ToSqlSpecificSchema) },
					{Constants.TypeUdtCatalog, nameof(Routine.TypeUdtCatalog) },
					{Constants.TypeUdtName, nameof(Routine.TypeUdtName) },
					{Constants.TypeUdtSchema, nameof(Routine.TypeUdtSchema) },
					{Constants.UdtCatalog, nameof(Routine.UdtCatalog) },
					{Constants.UdtName, nameof(Routine.UdtName) },
					{Constants.UdtSchema, nameof(Routine.UdtSchema) },
				};

				static Func<Type, string, PropertyInfo> GetMapperFunc()
				{
					var mapper = new Func<Type, string, PropertyInfo>((t, columnName) =>
					{
						if (columnMap.ContainsKey(columnName)) return t.GetProperty(columnMap[columnName]);
						return t.GetProperty(columnName);
					}
					);
					return mapper;
				}

				public static CustomPropertyTypeMap GetTypeMap()
				{
					var typeMap = new CustomPropertyTypeMap(typeof(Routine), GetMapperFunc());
					CustomizeTypeMap(typeMap);
					return typeMap;
				}

				static partial void CustomizeTypeMap(CustomPropertyTypeMap typeMap);
			}
		}
	}
}