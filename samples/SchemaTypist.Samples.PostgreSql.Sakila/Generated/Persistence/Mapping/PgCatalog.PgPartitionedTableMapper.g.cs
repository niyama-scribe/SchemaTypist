//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Dapper;
using SchemaTypist;
using SchemaTypist.DatabaseMetadata;
using System;
using System.Collections.Generic;
using System.Reflection;
using SchemaTypist.Generated.Domain;

namespace SchemaTypist.Generated.Persistence.Mapping
{
	static partial class PgCatalog
	{
		public static partial class PgPartitionedTableMapper
		{
			static partial class Constants
			{
				public const string Partattr = "partattrs";
				public const string Partclass = "partclass";
				public const string Partcollation = "partcollation";
				public const string Partdefid = "partdefid";
				public const string Partexpr = "partexprs";
				public const string Partnatt = "partnatts";
				public const string Partrelid = "partrelid";
				public const string Partstrat = "partstrat";
			}

			public static TableDefinition Table => new TableDefinition();

			public partial class TableDefinition : TabularDefinition
			{
				public TableDefinition() : base("pg_catalog.pg_partitioned_table")
				{
					Partattr = new ColumnDefinition(Constants.Partattr, this);
					Partclass = new ColumnDefinition(Constants.Partclass, this);
					Partcollation = new ColumnDefinition(Constants.Partcollation, this);
					Partdefid = new ColumnDefinition(Constants.Partdefid, this);
					Partexpr = new ColumnDefinition(Constants.Partexpr, this);
					Partnatt = new ColumnDefinition(Constants.Partnatt, this);
					Partrelid = new ColumnDefinition(Constants.Partrelid, this);
					Partstrat = new ColumnDefinition(Constants.Partstrat, this);
				}

				public TableDefinition As(string alias) => base.As<TableDefinition>(alias);

				public ColumnDefinition Partattr { get; private set; }
				public ColumnDefinition Partclass { get; private set; }
				public ColumnDefinition Partcollation { get; private set; }
				public ColumnDefinition Partdefid { get; private set; }
				public ColumnDefinition Partexpr { get; private set; }
				public ColumnDefinition Partnatt { get; private set; }
				public ColumnDefinition Partrelid { get; private set; }
				public ColumnDefinition Partstrat { get; private set; }

			}
		
			public static partial class QueryResults
			{
				private static Dictionary<string, string> columnMap = new Dictionary<string, string>()
				{
					{Constants.Partattr, nameof(PgPartitionedTable.Partattr) },
					{Constants.Partclass, nameof(PgPartitionedTable.Partclass) },
					{Constants.Partcollation, nameof(PgPartitionedTable.Partcollation) },
					{Constants.Partdefid, nameof(PgPartitionedTable.Partdefid) },
					{Constants.Partexpr, nameof(PgPartitionedTable.Partexpr) },
					{Constants.Partnatt, nameof(PgPartitionedTable.Partnatt) },
					{Constants.Partrelid, nameof(PgPartitionedTable.Partrelid) },
					{Constants.Partstrat, nameof(PgPartitionedTable.Partstrat) },
				};

				static Func<Type, string, PropertyInfo> GetMapperFunc()
				{
					var mapper = new Func<Type, string, PropertyInfo>((t, columnName) =>
					{
						if (columnMap.ContainsKey(columnName)) return t.GetProperty(columnMap[columnName]);
						return t.GetProperty(columnName);
					}
					);
					return mapper;
				}

				public static CustomPropertyTypeMap GetTypeMap()
				{
					var typeMap = new CustomPropertyTypeMap(typeof(PgPartitionedTable), GetMapperFunc());
					CustomizeTypeMap(typeMap);
					return typeMap;
				}

				static partial void CustomizeTypeMap(CustomPropertyTypeMap typeMap);
			}
		}
	}
}