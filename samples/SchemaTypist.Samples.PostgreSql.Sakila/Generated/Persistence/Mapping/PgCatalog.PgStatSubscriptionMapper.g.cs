//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Dapper;
using SchemaTypist;
using SchemaTypist.DatabaseMetadata;
using System;
using System.Collections.Generic;
using System.Reflection;
using SchemaTypist.Generated.Domain;

namespace SchemaTypist.Generated.Persistence.Mapping
{
	static partial class PgCatalog
	{
		public static partial class PgStatSubscriptionMapper
		{
			static partial class Constants
			{
				public const string LastMsgReceiptTime = "last_msg_receipt_time";
				public const string LastMsgSendTime = "last_msg_send_time";
				public const string LatestEndLsn = "latest_end_lsn";
				public const string LatestEndTime = "latest_end_time";
				public const string Pid = "pid";
				public const string ReceivedLsn = "received_lsn";
				public const string Relid = "relid";
				public const string Subid = "subid";
				public const string Subname = "subname";
			}

			public static TableDefinition Table => new TableDefinition();

			public partial class TableDefinition : TabularDefinition
			{
				public TableDefinition() : base("pg_catalog.pg_stat_subscription")
				{
					LastMsgReceiptTime = new ColumnDefinition(Constants.LastMsgReceiptTime, this);
					LastMsgSendTime = new ColumnDefinition(Constants.LastMsgSendTime, this);
					LatestEndLsn = new ColumnDefinition(Constants.LatestEndLsn, this);
					LatestEndTime = new ColumnDefinition(Constants.LatestEndTime, this);
					Pid = new ColumnDefinition(Constants.Pid, this);
					ReceivedLsn = new ColumnDefinition(Constants.ReceivedLsn, this);
					Relid = new ColumnDefinition(Constants.Relid, this);
					Subid = new ColumnDefinition(Constants.Subid, this);
					Subname = new ColumnDefinition(Constants.Subname, this);
				}

				public TableDefinition As(string alias) => base.As<TableDefinition>(alias);

				public ColumnDefinition LastMsgReceiptTime { get; private set; }
				public ColumnDefinition LastMsgSendTime { get; private set; }
				public ColumnDefinition LatestEndLsn { get; private set; }
				public ColumnDefinition LatestEndTime { get; private set; }
				public ColumnDefinition Pid { get; private set; }
				public ColumnDefinition ReceivedLsn { get; private set; }
				public ColumnDefinition Relid { get; private set; }
				public ColumnDefinition Subid { get; private set; }
				public ColumnDefinition Subname { get; private set; }

			}
		
			public static partial class QueryResults
			{
				private static Dictionary<string, string> columnMap = new Dictionary<string, string>()
				{
					{Constants.LastMsgReceiptTime, nameof(PgStatSubscription.LastMsgReceiptTime) },
					{Constants.LastMsgSendTime, nameof(PgStatSubscription.LastMsgSendTime) },
					{Constants.LatestEndLsn, nameof(PgStatSubscription.LatestEndLsn) },
					{Constants.LatestEndTime, nameof(PgStatSubscription.LatestEndTime) },
					{Constants.Pid, nameof(PgStatSubscription.Pid) },
					{Constants.ReceivedLsn, nameof(PgStatSubscription.ReceivedLsn) },
					{Constants.Relid, nameof(PgStatSubscription.Relid) },
					{Constants.Subid, nameof(PgStatSubscription.Subid) },
					{Constants.Subname, nameof(PgStatSubscription.Subname) },
				};

				static Func<Type, string, PropertyInfo> GetMapperFunc()
				{
					var mapper = new Func<Type, string, PropertyInfo>((t, columnName) =>
					{
						if (columnMap.ContainsKey(columnName)) return t.GetProperty(columnMap[columnName]);
						return t.GetProperty(columnName);
					}
					);
					return mapper;
				}

				public static CustomPropertyTypeMap GetTypeMap()
				{
					var typeMap = new CustomPropertyTypeMap(typeof(PgStatSubscription), GetMapperFunc());
					CustomizeTypeMap(typeMap);
					return typeMap;
				}

				static partial void CustomizeTypeMap(CustomPropertyTypeMap typeMap);
			}
		}
	}
}