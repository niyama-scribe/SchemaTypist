//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Dapper;
using SchemaTypist;
using SchemaTypist.DatabaseMetadata;
using System;
using System.Collections.Generic;
using System.Reflection;
using SchemaTypist.Generated.Domain;

namespace SchemaTypist.Generated.Persistence.Mapping
{
	static partial class Public
	{
		public static partial class NicerButSlowerFilmListDao
		{
			static partial class Constants
			{
				public const string Actor = "actors";
				public const string Category = "category";
				public const string Description = "description";
				public const string Fid = "fid";
				public const string Length = "length";
				public const string Price = "price";
				public const string Rating = "rating";
				public const string Title = "title";
			}

			public static TableDefinition Table => new TableDefinition();

			public partial class TableDefinition : TabularDefinition
			{
				public TableDefinition() : base("public.nicer_but_slower_film_list")
				{
					Actor = new ColumnDefinition(Constants.Actor, this);
					Category = new ColumnDefinition(Constants.Category, this);
					Description = new ColumnDefinition(Constants.Description, this);
					Fid = new ColumnDefinition(Constants.Fid, this);
					Length = new ColumnDefinition(Constants.Length, this);
					Price = new ColumnDefinition(Constants.Price, this);
					Rating = new ColumnDefinition(Constants.Rating, this);
					Title = new ColumnDefinition(Constants.Title, this);
				}

				public TableDefinition As(string alias) => base.As<TableDefinition>(alias);

				public ColumnDefinition Actor { get; private set; }
				public ColumnDefinition Category { get; private set; }
				public ColumnDefinition Description { get; private set; }
				public ColumnDefinition Fid { get; private set; }
				public ColumnDefinition Length { get; private set; }
				public ColumnDefinition Price { get; private set; }
				public ColumnDefinition Rating { get; private set; }
				public ColumnDefinition Title { get; private set; }

			}
		
			public static partial class QueryResults
			{
				private static Dictionary<string, string> columnMap = new Dictionary<string, string>()
				{
					{Constants.Actor, nameof(NicerButSlowerFilmList.Actor) },
					{Constants.Category, nameof(NicerButSlowerFilmList.Category) },
					{Constants.Description, nameof(NicerButSlowerFilmList.Description) },
					{Constants.Fid, nameof(NicerButSlowerFilmList.Fid) },
					{Constants.Length, nameof(NicerButSlowerFilmList.Length) },
					{Constants.Price, nameof(NicerButSlowerFilmList.Price) },
					{Constants.Rating, nameof(NicerButSlowerFilmList.Rating) },
					{Constants.Title, nameof(NicerButSlowerFilmList.Title) },
				};

				static Func<Type, string, PropertyInfo> GetMapperFunc()
				{
					var mapper = new Func<Type, string, PropertyInfo>((t, columnName) =>
					{
						if (columnMap.ContainsKey(columnName)) return t.GetProperty(columnMap[columnName]);
						return t.GetProperty(columnName);
					}
					);
					return mapper;
				}

				public static CustomPropertyTypeMap GetTypeMap()
				{
					var typeMap = new CustomPropertyTypeMap(typeof(NicerButSlowerFilmList), GetMapperFunc());
					CustomizeTypeMap(typeMap);
					return typeMap;
				}

				static partial void CustomizeTypeMap(CustomPropertyTypeMap typeMap);
			}
		}
	}
}