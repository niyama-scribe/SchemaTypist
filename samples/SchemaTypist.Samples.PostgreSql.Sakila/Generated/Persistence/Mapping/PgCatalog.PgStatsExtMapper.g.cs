//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Dapper;
using SchemaTypist;
using SchemaTypist.DatabaseMetadata;
using System;
using System.Collections.Generic;
using System.Reflection;
using SchemaTypist.Generated.Domain;

namespace SchemaTypist.Generated.Persistence.Mapping
{
	static partial class PgCatalog
	{
		public static partial class PgStatsExtMapper
		{
			static partial class Constants
			{
				public const string Attname = "attnames";
				public const string Dependency = "dependencies";
				public const string Expr = "exprs";
				public const string Kind = "kinds";
				public const string MostCommonBaseFreq = "most_common_base_freqs";
				public const string MostCommonFreq = "most_common_freqs";
				public const string MostCommonValNull = "most_common_val_nulls";
				public const string MostCommonVal = "most_common_vals";
				public const string NDistinct = "n_distinct";
				public const string Schemaname = "schemaname";
				public const string StatisticsName = "statistics_name";
				public const string StatisticsOwner = "statistics_owner";
				public const string StatisticsSchemaname = "statistics_schemaname";
				public const string Tablename = "tablename";
			}

			public static TableDefinition Table => new TableDefinition();

			public partial class TableDefinition : TabularDefinition
			{
				public TableDefinition() : base("pg_catalog.pg_stats_ext")
				{
					Attname = new ColumnDefinition(Constants.Attname, this);
					Dependency = new ColumnDefinition(Constants.Dependency, this);
					Expr = new ColumnDefinition(Constants.Expr, this);
					Kind = new ColumnDefinition(Constants.Kind, this);
					MostCommonBaseFreq = new ColumnDefinition(Constants.MostCommonBaseFreq, this);
					MostCommonFreq = new ColumnDefinition(Constants.MostCommonFreq, this);
					MostCommonValNull = new ColumnDefinition(Constants.MostCommonValNull, this);
					MostCommonVal = new ColumnDefinition(Constants.MostCommonVal, this);
					NDistinct = new ColumnDefinition(Constants.NDistinct, this);
					Schemaname = new ColumnDefinition(Constants.Schemaname, this);
					StatisticsName = new ColumnDefinition(Constants.StatisticsName, this);
					StatisticsOwner = new ColumnDefinition(Constants.StatisticsOwner, this);
					StatisticsSchemaname = new ColumnDefinition(Constants.StatisticsSchemaname, this);
					Tablename = new ColumnDefinition(Constants.Tablename, this);
				}

				public TableDefinition As(string alias) => base.As<TableDefinition>(alias);

				public ColumnDefinition Attname { get; private set; }
				public ColumnDefinition Dependency { get; private set; }
				public ColumnDefinition Expr { get; private set; }
				public ColumnDefinition Kind { get; private set; }
				public ColumnDefinition MostCommonBaseFreq { get; private set; }
				public ColumnDefinition MostCommonFreq { get; private set; }
				public ColumnDefinition MostCommonValNull { get; private set; }
				public ColumnDefinition MostCommonVal { get; private set; }
				public ColumnDefinition NDistinct { get; private set; }
				public ColumnDefinition Schemaname { get; private set; }
				public ColumnDefinition StatisticsName { get; private set; }
				public ColumnDefinition StatisticsOwner { get; private set; }
				public ColumnDefinition StatisticsSchemaname { get; private set; }
				public ColumnDefinition Tablename { get; private set; }

			}
		
			public static partial class QueryResults
			{
				private static Dictionary<string, string> columnMap = new Dictionary<string, string>()
				{
					{Constants.Attname, nameof(PgStatsExt.Attname) },
					{Constants.Dependency, nameof(PgStatsExt.Dependency) },
					{Constants.Expr, nameof(PgStatsExt.Expr) },
					{Constants.Kind, nameof(PgStatsExt.Kind) },
					{Constants.MostCommonBaseFreq, nameof(PgStatsExt.MostCommonBaseFreq) },
					{Constants.MostCommonFreq, nameof(PgStatsExt.MostCommonFreq) },
					{Constants.MostCommonValNull, nameof(PgStatsExt.MostCommonValNull) },
					{Constants.MostCommonVal, nameof(PgStatsExt.MostCommonVal) },
					{Constants.NDistinct, nameof(PgStatsExt.NDistinct) },
					{Constants.Schemaname, nameof(PgStatsExt.Schemaname) },
					{Constants.StatisticsName, nameof(PgStatsExt.StatisticsName) },
					{Constants.StatisticsOwner, nameof(PgStatsExt.StatisticsOwner) },
					{Constants.StatisticsSchemaname, nameof(PgStatsExt.StatisticsSchemaname) },
					{Constants.Tablename, nameof(PgStatsExt.Tablename) },
				};

				static Func<Type, string, PropertyInfo> GetMapperFunc()
				{
					var mapper = new Func<Type, string, PropertyInfo>((t, columnName) =>
					{
						if (columnMap.ContainsKey(columnName)) return t.GetProperty(columnMap[columnName]);
						return t.GetProperty(columnName);
					}
					);
					return mapper;
				}

				public static CustomPropertyTypeMap GetTypeMap()
				{
					var typeMap = new CustomPropertyTypeMap(typeof(PgStatsExt), GetMapperFunc());
					CustomizeTypeMap(typeMap);
					return typeMap;
				}

				static partial void CustomizeTypeMap(CustomPropertyTypeMap typeMap);
			}
		}
	}
}